{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/actions.jsx","redux/contacts/operations.jsx","redux/contacts/selectors.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.js","redux/contacts/reduser.jsx","redux/store.jsx","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getFilter","state","contacts","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","createContact","props","onSubmit","sameName","find","el","sameNumber","alert","handleSubmit","preventDefault","reset","this","className","s","form_label","htmlFor","form_input","type","id","onChange","pattern","title","required","addButton","Component","connect","dispatch","post","then","data","catch","error","addContact","Filter","filter_label","filter_input","defaultProps","target","ContactList","fetchContacts","onDeleteContact","length","users","map","contact_list","removeContactButton","onClick","delete","deleteContact","a","get","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0966dca8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2XGjH\",\"contact__container\":\"ContactList_contact__container__1KLnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__17q8H\",\"filter_label\":\"Filter_filter_label__22KHF\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    id: uuidv4(),\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\n// export const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getAllContacts } from '../../redux/contacts/selectors';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  createContact = () => {\n    const { name, number } = this.state;\n    const { onSubmit, items } = this.props;\n\n    const sameName = items.find(\n      el => el.name.toLowerCase() === name.toLowerCase(),\n    );\n    const sameNumber = items.find(el => el.number === number);\n    if (sameName || sameNumber) {\n      alert(`${name} or ${number} is already in contacts`);\n\n      return;\n    } else {\n      onSubmit(name, number);\n    }\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.createContact();\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.form_label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.form_input}\n            type=\"text\"\n            name=\"name\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId} className={s.form_label}>\n          Number\n          <input\n            className={s.form_input}\n            type=\"text\"\n            id={this.numberInputId}\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12  цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.addButton}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  items: getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\n","import { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/actions';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <>\n    <label className={s.filter_label}>\n      Filter\n      <input\n        className={s.filter_input}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n      />\n    </label>\n  </>\n);\n\nFilter.defaultProps = {\n  value: '',\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    return (\n      contacts.length > 0 && (\n        <ul className={s.users}>\n          {contacts.map(({ id, name, number }) => {\n            return (\n              <li className={s.contact_list} key={id}>\n                <p>\n                  {name} : {number}\n                </p>\n                <button\n                  className={s.removeContactButton}\n                  type=\"button\"\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\n\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"phonebookHeader\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contactsHeader\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\n// import {\n//   getFirebase,\n//   actionTypes as rrfActionTypes,\n// } from 'react-redux-firebase';\n// import { constants as rfConstants } from 'redux-firestore';\n\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from \"redux-persist/lib/storage\";\nimport contactReducer from './contacts/reduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      // serializableCheck: false,\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware,\n  // devTools: process.env.NODE_ENV === \"development\",\n});\n//const persistor = persistStore(store);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_input\":\"ContactForm_form_input__P-nIf\",\"form_label\":\"ContactForm_form_label__1iLJM\",\"addButton\":\"ContactForm_addButton__2nRwM\"};"],"sourceRoot":""}